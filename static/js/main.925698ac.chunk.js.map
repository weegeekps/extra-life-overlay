{"version":3,"sources":["controller_white.svg","models/Orientation.ts","components/Logo.tsx","components/Progress.tsx","utils.ts","App.tsx","store/participant/Types.ts","store/Reducers.ts","store/participant/Reducers.ts","store/participant/Actions.ts","services/ExtraLife.ts","store/participant/Selectors.ts","store/participant/Sagas.ts","store/Sagas.ts","index.tsx"],"names":["module","exports","Orientation","Logo","props","className","data-testid","src","logo","alt","calculateCompletedWidth","current","goal","max","value","min","connect","state","ownProps","participant","classes","springWidth","useSpring","width","sumDonations","fundraisingGoal","div","style","toFixed","getQueryStringValue","queryString","sanitized","xss","URLSearchParams","window","location","search","get","undefined","ParticipantActionTypes","App","orientation","debuggingMode","topLevelClasses","reduce","acc","val","prepareClassString","Left","combineReducers","isFetchingParticipant","action","type","PARTICIPANT_ID_SET","id","PARTICIPANT_FETCH_REQUESTED","PARTICIPANT_FETCH_SUCCESSFUL","PARTICIPANT_FETCH_FAILED","setParticipantId","requestParticipantFetch","successfulParticipantFetch","fetchParticipantById","participantId","fetch","then","r","json","catch","e","console","error","getParticipantId","isRequestInFlight","retrieveParticipant","tickUpdateParticipantTimer","watchFetchParticipant","runParticipantSagas","call","put","actions","select","waitDelay","delay","takeEvery","fork","startup","root","participantActions","warn","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","rootSagas","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.925698ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/controller_white.f4f4dde4.svg\";","export enum Orientation {\n  Left = \"left\",\n  Right = \"right\"\n}\n","import React from \"react\";\nimport \"./Logo.css\";\nimport logo from \"../controller_white.svg\";\n\nconst Logo: React.FC = (props) => {\n  return (\n    <div className=\"logo\" data-testid=\"logo\">\n      <img src={logo} alt=\"Extra Life\" />\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Progress.css\";\nimport { IParticipant } from \"../models/IParticipant\";\nimport { IAppState } from \"../models/IAppState\";\n\nexport interface IProgressOwnProps {\n  className?: string;\n}\n\nexport interface IProgressProps {\n  className?: string;\n  participant?: IParticipant;\n}\n\nconst clamp = (value: number, min: number, max: number) => {\n  if (value > min && value < max) return value;\n  if (value < min) return min;\n  if (value > max) return max;\n};\n\nconst calculateCompletedWidth = (current: number, goal: number) =>\n  clamp((current / goal) * 100, 0, 100);\n\nconst Progress: React.FC<IProgressProps> = (props) => {\n  const { className: classes, participant } = props;\n\n  const springWidth = useSpring({\n    width:\n      (participant\n        ? calculateCompletedWidth(\n          participant.sumDonations,\n          participant.fundraisingGoal\n        )\n        : 0) + \"%\",\n  });\n\n  if (!participant) return null;\n\n  return (\n    <div className=\"progress-container\" data-testid=\"progress\">\n      <div className={\"progress-bar \" + classes}>\n        <animated.div className=\"completed\" style={springWidth}></animated.div>\n      </div>\n      <div className={\"progress-text \" + classes}>\n        <p>${participant.sumDonations.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IAppState, ownProps: IProgressOwnProps) => {\n  const {\n    participant: { value: participant },\n  } = state;\n  const { className } = ownProps;\n\n  return {\n    className,\n    participant,\n  };\n};\n\nexport default connect(mapStateToProps)(Progress);\n","import xss from \"xss\";\n\nexport const getQueryStringValue = (queryString: string) => {\n  const sanitized = xss(queryString)\n\n  return (\n    new URLSearchParams(window.location.search).get(sanitized) || undefined\n  );\n};\n\nexport const checkQueryStringBoolean = (queryString: string) => {\n  return getQueryStringValue(queryString) === \"true\";\n};\n\nexport const prepareClassString = (...classes: string[]) => {\n  return classes.reduce((acc, val) => (acc += \" \" + val));\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport Logo from \"./components/Logo\";\nimport Progress from \"./components/Progress\";\nimport { getQueryStringValue, checkQueryStringBoolean, prepareClassString } from \"./utils\";\nimport { Orientation } from \"./models/Orientation\";\n\nconst App: React.FC = (props) => {\n  const orientation = getQueryStringValue(\"orientation\");\n  const debuggingMode = checkQueryStringBoolean(\"debugging\");\n  const topLevelClasses = prepareClassString(\n    \"app\",\n    orientation || Orientation.Left,\n    debuggingMode ? \"debugging\" : \"\"\n  );\n\n  return (\n    <div className={topLevelClasses} data-testid=\"app\">\n      <Logo />\n      <Progress className={orientation || Orientation.Left} />\n    </div>\n  );\n};\n\nexport default App;\n","export enum ParticipantActionTypes {\n  PARTICIPANT_ID_SET = \"PARTICIPANT_ID_SET\",\n  PARTICIPANT_FETCH_REQUESTED = \"PARTICIPANT_FETCH_REQUESTED\",\n  PARTICIPANT_FETCH_SUCCESSFUL = \"PARTICIPANT_FETCH_SUCCESSFUL\",\n  PARTICIPANT_FETCH_FAILED = \"PARTICIPANT_FETCH_FAILED\",\n}\n","import { combineReducers } from \"redux\";\nimport { participant } from \"./participant/Reducers\";\n\nexport default combineReducers({\n  participant,\n});\n","import { ParticipantActions } from \"./Interfaces\";\nimport { IParticipantState } from \"../../models/IAppState\";\nimport { ParticipantActionTypes } from \"./Types\";\n\nexport function participant(\n  state: IParticipantState = {\n    isFetchingParticipant: false,\n  },\n  action: ParticipantActions\n) {\n  switch (action.type) {\n    case ParticipantActionTypes.PARTICIPANT_ID_SET:\n      return {\n        ...state,\n        id: action.id,\n      };\n    case ParticipantActionTypes.PARTICIPANT_FETCH_REQUESTED:\n      return {\n        ...state,\n        isFetchingParticipant: true,\n      };\n    case ParticipantActionTypes.PARTICIPANT_FETCH_SUCCESSFUL:\n      return {\n        ...state,\n        value: action.participant,\n        isFetchingParticipant: false,\n      };\n    case ParticipantActionTypes.PARTICIPANT_FETCH_FAILED:\n      return {\n        ...state,\n        isFetchingParticipant: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  IRequestParticipantFetchAction,\n  ISuccessfulParticipantFetchAction,\n  IFailedParticipantFetchAction,\n  ISetParticipantIdAction,\n} from \"./Interfaces\";\nimport { ParticipantActionTypes } from \"./Types\";\nimport { ParticipantId, IParticipant } from \"../../models/IParticipant\";\n\nexport function setParticipantId(id: ParticipantId): ISetParticipantIdAction {\n  return {\n    type: ParticipantActionTypes.PARTICIPANT_ID_SET,\n    id,\n  };\n}\n\nexport function requestParticipantFetch(\n  id: ParticipantId\n): IRequestParticipantFetchAction {\n  return {\n    type: ParticipantActionTypes.PARTICIPANT_FETCH_REQUESTED,\n    id,\n  };\n}\n\nexport function successfulParticipantFetch(\n  participant: IParticipant\n): ISuccessfulParticipantFetchAction {\n  return {\n    type: ParticipantActionTypes.PARTICIPANT_FETCH_SUCCESSFUL,\n    participant,\n  };\n}\n\nexport function failedParticipantFetch(\n  error: Error\n): IFailedParticipantFetchAction {\n  return {\n    type: ParticipantActionTypes.PARTICIPANT_FETCH_FAILED,\n    error,\n  };\n}\n","import { IParticipant, ParticipantId } from \"../models/IParticipant\";\n\nexport function fetchParticipantById(\n  participantId: ParticipantId\n): Promise<IParticipant> {\n  return fetch(`https://www.extra-life.org/api/participants/${participantId}`)\n    .then((r) => r.json())\n    .catch((e) =>\n      console.error(`Fetch participant by id failed. Reason: ${e}`)\n    );\n}\n","import { IAppState } from \"../../models/IAppState\";\n\nexport const getParticipantId = (state: IAppState) => state.participant.id;\n\nexport const isRequestInFlight = (state: IAppState) =>\n  state.participant.isFetchingParticipant;\n","import * as actions from \"./Actions\";\nimport { call, put, takeEvery, delay, select, fork } from \"redux-saga/effects\";\nimport { fetchParticipantById } from \"../../services/ExtraLife\";\nimport { IParticipant } from \"../../models/IParticipant\";\nimport { IRequestParticipantFetchAction } from \"./Interfaces\";\nimport { ParticipantActionTypes } from \"./Types\";\nimport { getParticipantId, isRequestInFlight } from \"./Selectors\";\n\nconst DELAY_IN_SECONDS = 60;\n\nexport function* retrieveParticipant(action: IRequestParticipantFetchAction) {\n  try {\n    const participant: IParticipant = yield call(\n      fetchParticipantById,\n      action.id\n    );\n    yield put(actions.successfulParticipantFetch(participant));\n  } catch (err) {\n    yield put(actions.failedParticipantFetch(err));\n  }\n}\n\nexport function* tickUpdateParticipantTimer() {\n  while (true) {\n    const id = yield select(getParticipantId);\n\n    const lastRequestStillInFlight = yield select(isRequestInFlight);\n\n    if (!lastRequestStillInFlight && id) {\n      yield put(actions.requestParticipantFetch(id));\n    }\n\n    // Wake every second if id is undefined.\n    let waitDelay = id ? DELAY_IN_SECONDS : 1;\n    yield delay(waitDelay * 1000);\n  }\n}\n\nexport function* watchFetchParticipant() {\n  yield takeEvery(\n    ParticipantActionTypes.PARTICIPANT_FETCH_REQUESTED,\n    retrieveParticipant\n  );\n}\n\nexport function* runParticipantSagas() {\n  yield fork(watchFetchParticipant);\n  yield fork(tickUpdateParticipantTimer);\n}\n","import { fork, put } from \"redux-saga/effects\";\nimport { runParticipantSagas } from \"./participant/Sagas\";\nimport * as participantActions from \"./participant/Actions\";\nimport { getQueryStringValue } from \"../utils\";\n\nexport function* startup() {\n  const id = getQueryStringValue(\"participant\");\n\n  if (id) {\n    yield put(participantActions.setParticipantId(+id));\n  } else {\n    console.warn(\"No participant ID is set. Set the participant ID using the 'participant' query parameter.\")\n  }\n}\n\nexport default function* root() {\n  yield fork(startup);\n  yield fork(runParticipantSagas);\n}\n","import App from \"./App\";\nimport createSagaMiddleware from \"redux-saga\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport rootReducer from \"./store/Reducers\";\nimport rootSagas from \"./store/Sagas\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\n\nconst initialState = {};\n\nconst sagaMiddleware = createSagaMiddleware({});\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}